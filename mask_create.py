# file: mask_create.py
import torch


class MaskCreate:
    """
    –ù–æ–¥–∞ "mask_create" ‚Äî —Å–æ–∑–¥–∞—ë—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é –º–∞—Å–∫—É (–≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è = 1.0)
    –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ Height x Width.

    –í—Ö–æ–¥—ã:
      - Width  (INT): —à–∏—Ä–∏–Ω–∞ –º–∞—Å–∫–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö.
      - Height (INT): –≤—ã—Å–æ—Ç–∞ –º–∞—Å–∫–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö.

    –í—ã—Ö–æ–¥:
      - Mask (MASK): —Ç–µ–Ω–∑–æ—Ä float32 —Ñ–æ—Ä–º—ã [H, W] —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ 1.0 (–±–µ–ª–∞—è –º–∞—Å–∫–∞).
    """

    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                "Width": ("INT", {"default": 512, "min": 1, "max": 8192, "step": 8}),
                "Height": ("INT", {"default": 512, "min": 1, "max": 8192, "step": 8}),
            }
        }

    RETURN_TYPES = ("MASK",)
    RETURN_NAMES = ("Mask",)
    FUNCTION = "execute"
    CATEGORY = "utils/mask"
    OUTPUT_NODE = False

    def execute(self, Width: int, Height: int):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ ‚Äî –º–∞—Å–∫–∏ (MASK) —Ä–∞–∑–º–µ—Ä–æ–º [Height, Width],
        –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –µ–¥–∏–Ω–∏—Ü–∞–º–∏.
        """
        try:
            if not isinstance(Width, int) or not isinstance(Height, int):
                raise ValueError("Width –∏ Height –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ (INT).")

            if Width <= 0 or Height <= 0:
                raise ValueError("Width –∏ Height –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å > 0.")

            if Width > 8192 or Height > 8192:
                raise ValueError("Width –∏ Height –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–≤—ã—à–∞—Ç—å 8192.")

            mask = torch.ones((Height, Width), dtype=torch.float32, device="cpu")
            return (mask,)

        except Exception as e:
            msg = f"[mask_filled] –û—à–∏–±–∫–∞: {str(e)}"
            print(msg)
            raise RuntimeError(msg) from e


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–¥—ã –≤ ComfyUI
NODE_CLASS_MAPPINGS = {"MaskCreate": MaskCreate}
NODE_DISPLAY_NAME_MAPPINGS = {"MaskCreate": "üß© Mask Create"}
