# switch_lazy_image.py
# –ö–ª–∞—Å—Å: ImageSwitchLazy
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
#   use_first - BOOLEAN (–Ω–µ lazy)  -> –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω—É—Ç—å
#   image1    - IMAGE   (lazy=True)
#   image2    - IMAGE   (lazy=True)
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
#   –æ–¥–Ω–æ IMAGE ‚Äî –ª–∏–±–æ image1 (–µ—Å–ª–∏ use_first==True), –ª–∏–±–æ image2


class ImageSwitchLazy:
    @classmethod
    def INPUT_TYPES(cls):
        # –ø–æ—Ä—è–¥–æ–∫ –ø–æ–ª–µ–π –∑–¥–µ—Å—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º
        # check_lazy_status –∏ —Ñ—É–Ω–∫—Ü–∏—è switch –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è.
        return {
            "required": {
                # –ë—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ lazy ‚Äî –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ.
                "use_first": (
                    "BOOLEAN",
                    {"default": True, "label_on": "–ü–µ—Ä–≤–æ–µ", "label_off": "–í—Ç–æ—Ä–æ–µ"},
                ),
                # –û–±–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–º–µ—á–∞–µ–º lazy=True
                "image1": ("IMAGE", {"lazy": True}),
                "image2": ("IMAGE", {"lazy": True}),
            },
        }

    RETURN_TYPES = ("IMAGE",)
    FUNCTION = "switch"
    CATEGORY = "Custom"

    # –í–ê–ñ–ù–û: —ç—Ç–æ –æ–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥ (–Ω–µ @classmethod).
    # –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ –≤ —Ç–æ–º –∂–µ –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ –∏ –∫–ª—é—á–∏ –≤ INPUT_TYPES.
    def check_lazy_status(self, use_first, image1, image2):
        """
        –î–≤–∏–∂–æ–∫ –≤—ã–∑—ã–≤–∞–µ—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω lazy –≤—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –µ—â—ë –Ω–µ –≤—ã—á–∏—Å–ª–µ–Ω.
        –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ö–æ–¥—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∫–∞–∫ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è; –Ω–µ–≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ lazy –≤—Ö–æ–¥—ã = None.
        –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º—ë–Ω lazy-–≤—Ö–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å –¥–∞–ª—å—à–µ.
        """
        needed = []
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ image1
        if use_first:
            # –ï—Å–ª–∏ image1 –µ—â—ë –Ω–µ –≤—ã—á–∏—Å–ª–µ–Ω ‚Äî –ø–æ–º–µ—á–∞–µ–º –µ–≥–æ –∫–∞–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π
            if image1 is None:
                needed.append("image1")
        else:
            # –ò–Ω–∞—á–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ image2
            if image2 is None:
                needed.append("image2")
        return needed

    def switch(self, use_first, image1, image2):
        """
        –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è. –ö –º–æ–º–µ–Ω—Ç—É –≤—ã–∑–æ–≤–∞ —Å—é–¥–∞ —É–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω—ã —Ç–µ lazy-–≤—Ö–æ–¥—ã,
        –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤ —Å–ø–∏—Å–∫–µ, –≤–æ–∑–≤—Ä–∞—â—ë–Ω–Ω–æ–º –∏–∑ check_lazy_status.
        –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ—Ä—Ç–µ–∂ —Å –æ–¥–Ω–∏–º IMAGE.
        """
        if use_first:
            # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞—â–∏—Ç–∞: –µ—Å–ª–∏ image1 –≤—Å—ë –∂–µ None, –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å ExecutionBlocker
            if image1 is None:
                # –ª–µ–Ω–∏–≤–æ: –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å, –µ—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                from comfy_execution.graph import ExecutionBlocker

                return (ExecutionBlocker("image1 –Ω–µ –±—ã–ª –≤—ã—á–∏—Å–ª–µ–Ω"),)
            return (image1,)
        else:
            if image2 is None:
                from comfy_execution.graph import ExecutionBlocker

                return (ExecutionBlocker("image2 –Ω–µ –±—ã–ª –≤—ã—á–∏—Å–ª–µ–Ω"),)
            return (image2,)


# === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–¥—ã ===
NODE_CLASS_MAPPINGS = {
    "ImageSwitchLazy": ImageSwitchLazy,
}

NODE_DISPLAY_NAME_MAPPINGS = {
    "ImageSwitchLazy": "üîÄ Image Switch Lazy",
}
